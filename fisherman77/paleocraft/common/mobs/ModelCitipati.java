// Date: 2/16/2015 2:49:46 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package fisherman77.paleocraft.common.mobs;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelCitipati extends ModelBase
{
	protected double distanceMovedTotal = 50.0D;
	// don't make this too large or animations will be skipped
	protected static final double CYCLES_PER_BLOCK = 1.5D; 
	
	protected int  cycleIndex = 0;
	protected float[][] undulationCycle = new float[][]
	{
			{ 0F, 0F, 0F, 0F , 0F, 0F, 0F, 0F},
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	

	};	
			//fields
    ModelRenderer LeftArm1;
    ModelRenderer LeftArm2;
    ModelRenderer RightArm1;
    ModelRenderer RightArm2;
    ModelRenderer Neck1;
    ModelRenderer Neck2;
    ModelRenderer Body;
    ModelRenderer Wattle2;
    ModelRenderer Wattle1;
    ModelRenderer TailPiece1;
    ModelRenderer HeadPiece;
    ModelRenderer LeftLegPiece;
    ModelRenderer RightLegPiece;
  ModelRenderer Tail1;
  ModelRenderer Tail2;
  ModelRenderer Tail3;
  ModelRenderer TailFan3;
  ModelRenderer TailFan4;
  ModelRenderer Tail4;
  ModelRenderer Tail5;
  ModelRenderer TailFan5;
  ModelRenderer TailPiece2;
  ModelRenderer TailPiece3;
  ModelRenderer TailPiece4;
  ModelRenderer TailPiece5;
  ModelRenderer Head;
  ModelRenderer Crest;
  ModelRenderer Beak;
  ModelRenderer Left_Thigh;
  ModelRenderer Left_Leg;
  ModelRenderer Left_Foot;
  ModelRenderer Right_Thigh;
  ModelRenderer Right_Leg;
  ModelRenderer Right_Foot;
    
    
    
    
  public ModelCitipati()
  {
    textureWidth = 200;
    textureHeight = 104;
    
      LeftArm1 = new ModelRenderer(this, 107, 72);
      LeftArm1.addBox(0F, 0F, -1F, 1, 3, 4);
      LeftArm1.setRotationPoint(3F, 11F, -4F);
      LeftArm1.setTextureSize(200, 104);
      LeftArm1.mirror = true;
      setRotation(LeftArm1, 0.418879F, 0F, 0F);
      LeftArm2 = new ModelRenderer(this, 105, 87);
      LeftArm2.addBox(0F, 3F, -4F, 1, 5, 6);
      LeftArm2.setRotationPoint(3F, 11F, -4F);
      LeftArm2.setTextureSize(200, 104);
      LeftArm2.mirror = true;
      setRotation(LeftArm2, 0.418879F, 0F, 0F);
      RightArm1 = new ModelRenderer(this, 107, 72);
      RightArm1.addBox(-1F, 0F, -1F, 1, 3, 4);
      RightArm1.setRotationPoint(-3F, 11F, -4F);
      RightArm1.setTextureSize(200, 104);
      RightArm1.mirror = true;
      setRotation(RightArm1, 0.418879F, 0F, 0F);
      RightArm2 = new ModelRenderer(this, 105, 87);
      RightArm2.addBox(-1F, 3F, -4F, 1, 5, 6);
      RightArm2.setRotationPoint(-3F, 11F, -4F);
      RightArm2.setTextureSize(200, 104);
      RightArm2.mirror = true;
      setRotation(RightArm2, 0.418879F, 0F, 0F);
      Neck1 = new ModelRenderer(this, 72, 41);
      Neck1.addBox(-2F, -2F, -5F, 4, 4, 3);
      Neck1.setRotationPoint(0F, 11F, -2F);
      Neck1.setTextureSize(200, 104);
      Neck1.mirror = true;
      setRotation(Neck1, -0.6283185F, 0F, 0F);
      Neck2 = new ModelRenderer(this, 15, 52);
      Neck2.addBox(-1F, -2.5F, -10F, 2, 3, 10);
      Neck2.setRotationPoint(0F, 9F, -6F);
      Neck2.setTextureSize(200, 104);
      Neck2.mirror = true;
      setRotation(Neck2, -0.7504916F, 0F, 0F);
      Body = new ModelRenderer(this, 46, 59);
      Body.addBox(-3F, -3F, 0F, 6, 7, 11);
      Body.setRotationPoint(0F, 9F, -5F);
      Body.setTextureSize(200, 104);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Wattle2 = new ModelRenderer(this, 32, 34);
      Wattle2.addBox(-0.5F, 0F, -1F, 1, 5, 1);
      Wattle2.setRotationPoint(0F, 6F, -8F);
      Wattle2.setTextureSize(200, 104);
      Wattle2.mirror = true;
      setRotation(Wattle2, 0F, 0F, 0F);
      Wattle1 = new ModelRenderer(this, 21, 33);
      Wattle1.addBox(-0.5F, 0F, -1F, 1, 5, 2);
      Wattle1.setRotationPoint(0F, 4F, -11F);
      Wattle1.setTextureSize(200, 104);
      Wattle1.mirror = true;
      setRotation(Wattle1, 0F, 0F, 0F);
    TailPiece1 = new ModelRenderer(this, "TailPiece1");
    TailPiece1.setRotationPoint(0F, 8F, 6F);
    setRotation(TailPiece1, 0F, 0F, 0F);
    TailPiece1.mirror = true;
     // TailPiece1.addBox("Tail1", -2.5F, -2F, 0F, 5, 6, 4);
    ModelRenderer Tail1 = new ModelRenderer(this, 17, 69);
    Tail1.addBox(-2.5F, -2F, 0F, 5, 6, 4);
      
      
      
      TailPiece2 = new ModelRenderer(this, "TailPiece2");
    TailPiece2.setRotationPoint(0F, 0.5F, 4F);
    setRotation(TailPiece2, 0F, 0F, 0F);
    TailPiece2.mirror = true;
      //TailPiece2.addBox("Tail2", -2F, -2F, 0F, 4, 5, 5);
    ModelRenderer Tail2 = new ModelRenderer(this, 37, 82);
    Tail2.addBox(-2F, -2F, 0F, 4, 5, 5);
      
      
      
      TailPiece3 = new ModelRenderer(this, "TailPiece3");
    TailPiece3.setRotationPoint(0F, 0.5F, 5F);
    setRotation(TailPiece3, 0F, 0F, 0F);
    TailPiece3.mirror = true;
   //   TailPiece3.addBox("Tail3", -1F, -2F, 0F, 2, 4, 5);
   //   TailPiece3.addBox("TailFan3", -5F, -0.5F, 0F, 10, 1, 5);
    ModelRenderer Tail3 = new ModelRenderer(this, 15, 85);
    Tail3.addBox(-1F, -2F, 0F, 2, 4, 5);
    ModelRenderer TailFan3 = new ModelRenderer(this, 67, 27);
    TailFan3.addBox(-5F, -0.5F, 0F, 10, 1, 5);
      
      TailPiece4 = new ModelRenderer(this, "TailPiece4");
    TailPiece4.setRotationPoint(0F, 0F, 5F);
    setRotation(TailPiece4, 0F, 0F, 0F);
    TailPiece4.mirror = true;
   //   TailPiece4.addBox("TailFan4", -4F, -0.5F, 0F, 8, 1, 6);
   //   TailPiece4.addBox("Tail4", -1F, -1.5F, 0F, 2, 3, 6);
    ModelRenderer TailFan4 = new ModelRenderer(this, 104, 28);
    TailFan4.addBox(-4F, -0.5F, 0F, 8, 1, 6);
    ModelRenderer Tail4 = new ModelRenderer(this, 75, 55);
    Tail4.addBox(-1F, -1.5F, 0F, 2, 3, 6);
      
   
    
    TailPiece5 = new ModelRenderer(this, "TailPiece5");
    TailPiece5.setRotationPoint(0F, 0F, 6F);
    setRotation(TailPiece5, 0F, 0F, 0F);
    TailPiece5.mirror = true;
    //  TailPiece5.addBox("Tail5", -1F, -1F, 0F, 2, 2, 6);
    //  TailPiece5.addBox("TailFan5", -5F, -0.5F, 0F, 10, 1, 14);
    ModelRenderer Tail5 = new ModelRenderer(this, 66, 88);
    Tail5.addBox(-1F, -1F, 0F, 2, 2, 6);
    ModelRenderer TailFan5 = new ModelRenderer(this, 108, 52);
    TailFan5.addBox(-5F, -0.5F, 0F, 10, 1, 14);
      
      HeadPiece = new ModelRenderer(this, "HeadPiece");
    HeadPiece.setRotationPoint(0F, 2F, -11.5F);
    setRotation(HeadPiece, 0F, 0F, 0F);
    HeadPiece.mirror = true;
    //  HeadPiece.addBox("Crest", 0F, -5F, -7F, 0, 4, 7);
    //  HeadPiece.addBox("Beak", -1.5F, -1F, -7F, 3, 4, 1);
    //  HeadPiece.addBox("Head", -1.5F, -2F, -6F, 3, 5, 6);
     // modelCiti.addChildModelRenderer(HeadPiece);
    ModelRenderer Crest = new ModelRenderer(this, 39, 18);
    Crest.addBox(0F, -5F, -7F, 0, 4, 7);
    ModelRenderer Beak = new ModelRenderer(this, 17, 21);
    Beak.addBox(-1.5F, -1F, -7F, 3, 4, 1);
    ModelRenderer Head = new ModelRenderer(this, 27, 6);
    Head.addBox(-1.5F, -2F, -6F, 3, 5, 6);
    
    
    LeftLegPiece = new ModelRenderer(this, "LeftLegPiece");
    LeftLegPiece.setRotationPoint(2F, 11F, 3F);
    setRotation(LeftLegPiece, 0F, 0F, 0F);
    LeftLegPiece.mirror = true;
   //   LeftLegPiece.addBox("Left Thigh", 0F, -3F, -1F, 2, 9, 4);
   //   LeftLegPiece.addBox("Left Leg", 0F, 5F, 2F, 2, 7, 2);
    //  LeftLegPiece.addBox("Left Foot", 0F, 12F, 0F, 2, 1, 4);
    ModelRenderer Left_Thigh = new ModelRenderer(this, 10, 42);
    Left_Thigh.addBox(0F, -3F, -1F, 2, 9, 4);
    ModelRenderer Left_Leg = new ModelRenderer(this, 42, 41);
    Left_Leg.addBox(0F, 5F, 2F, 2, 7, 2);
    ModelRenderer Left_Foot = new ModelRenderer(this, 51, 41);
    Left_Foot.addBox(0F, 12F, 0F, 2, 1, 4);
      
      //   modelCiti.addChildModelRenderer(LeftLegPiece);
    RightLegPiece = new ModelRenderer(this, "RightLegPiece");
    RightLegPiece.setRotationPoint(-2F, 11F, 3F);
    setRotation(RightLegPiece, 0F, 0F, 0F);
    RightLegPiece.mirror = true;
  //    RightLegPiece.addBox("Right Thigh", -2F, -3F, -1F, 2, 9, 4);
  //    Right_Foot.mirror = true;
   //   RightLegPiece.addBox("Right Foot", -2F, 12F, 0F, 2, 1, 4);
   //   Right_Foot.mirror = false;
   //   Right_Leg.mirror = true;
    //  RightLegPiece.addBox("Right Leg", -2F, 5F, 2F, 2, 7, 2);
   //   Right_Leg.mirror = false;
     // modelCiti.addChildModelRenderer(RightLegPiece);
  
    ModelRenderer Right_Thigh = new ModelRenderer(this, 3, 28);
    Right_Thigh.addBox(-2F, -3F, -1F, 2, 9, 4);
    ModelRenderer Right_Foot = new ModelRenderer(this, 51, 41);
    Right_Foot.addBox(-2F, 12F, 0F, 2, 1, 4);
    ModelRenderer Right_Leg = new ModelRenderer(this, 42, 41);
    Right_Leg.addBox(-2F, 5F, 2F, 2, 7, 2);
  
  
    TailPiece4.addChild(TailPiece5);
    TailPiece3.addChild(TailPiece4);
    TailPiece2.addChild(TailPiece3);
    TailPiece1.addChild(TailPiece2);
    
    TailPiece1.addChild(Tail1);
    TailPiece2.addChild(Tail2);
    TailPiece3.addChild(Tail3);
    TailPiece4.addChild(Tail4);
    TailPiece5.addChild(Tail5);
    TailPiece3.addChild(TailFan3);
    TailPiece4.addChild(TailFan4);
    TailPiece5.addChild(TailFan5);
    HeadPiece.addChild(Head);
    HeadPiece.addChild(Crest);
    HeadPiece.addChild(Beak);
    LeftLegPiece.addChild(Left_Thigh);
    LeftLegPiece.addChild(Left_Leg);
    LeftLegPiece.addChild(Left_Foot);
    RightLegPiece.addChild(Right_Thigh);
    RightLegPiece.addChild(Right_Foot);
    RightLegPiece.addChild(Right_Leg);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    LeftArm1.render(f5);
    LeftArm2.render(f5);
    RightArm1.render(f5);
    RightArm2.render(f5);
    Neck1.render(f5);
    Neck2.render(f5);
    Body.render(f5);
    Wattle2.render(f5);
    Wattle1.render(f5);
    TailPiece1.render(f5);
    HeadPiece.render(f5);
    LeftLegPiece.render(f5);
    RightLegPiece.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity parEntity)
  {
    //super.setRotationAngles(f, f1, f2, f3, f4, f5);
	  HeadPiece.rotateAngleY = f3 / 57.29578F;
	  HeadPiece.rotateAngleX = f4 / 57.29578F;
	  this.LeftLegPiece.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
	   this.RightLegPiece.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
	   updateDistanceMovedTotal(parEntity);
	   cycleIndex = (int) ((getDistanceMovedTotal(parEntity)*CYCLES_PER_BLOCK)
	         %undulationCycle.length);
	   // DEBUG THIS WILL SPAM THE CONSOLE. STOP THIS CODE ON MOD RELEASE.
	   /*System.out.println("ModelSpino setRotationAngles(), distanceMoved ="
	         +getDistanceMovedTotal(parEntity)+", cycleIndex ="+cycleIndex);*/
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][0]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][1]) ;
	 //  TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][2]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][2]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][3]) ;
	 //  TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][5]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][0]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][1]) ;
	 //  TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][2]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][3]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][4]) ;
	 //  TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][5]) ;
  
  }
  protected void updateDistanceMovedTotal(Entity parEntity) 
  {
      distanceMovedTotal += parEntity.getDistance(parEntity.prevPosX, parEntity.prevPosY, 
            parEntity.prevPosZ);
  }
  
  protected double getDistanceMovedTotal(Entity parEntity) 
  {
      return (distanceMovedTotal);
  }

  protected float degToRad(float degrees)
  {
      return degrees * (float)Math.PI / 180 ;
  }
}
