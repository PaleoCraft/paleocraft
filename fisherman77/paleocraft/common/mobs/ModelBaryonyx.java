// Date: 12/17/2014 3:43:07 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package fisherman77.paleocraft.common.mobs;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelBaryonyx extends ModelBase
{
	protected double distanceMovedTotal = 50.0D;
	// don't make this too large or animations will be skipped
	protected static final double CYCLES_PER_BLOCK = 1.5D; 
	
	protected int  cycleIndex = 0;
	protected float[][] undulationCycle = new float[][]
	{
			{ 0F, 0F, 0F, 0F , 0F, 0F, 0F, 0F},
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
			{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
			/* {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    {  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
	    {   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
	   { -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
	    { -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	   {   0F, -45F,  45F,  45F,   0F, -45F, -45F,   0F },
	    {  45F, -90F,   0F,  45F,  45F,   0F, -45F, -45F },
	    { 0F, 0F, 0F, 0F , 0F, 0F, 0F, 0F},
		{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
		{  45F, -45F, -45F,   0F,  45F,  45F,   0F, -45F },
		{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
		{   0F,  45F, -45F, -45F,   0F,  45F,  45F,   0F },
		{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
		{ -45F,  90F,   0F, -45F, -45F,   0F,  45F,  45F },
		{ -45F,  45F,  45F,   0F, -45F, -45F,   0F,  45F },
	    { 0F, 0F, 0F, 0F , 0F, 0F, 0F, 0F},*/
	};
	
	
	
	
	//fields
    ModelRenderer Spines;
    ModelRenderer Mane;
    ModelRenderer RightClaw;
    ModelRenderer RightHand;
    ModelRenderer RightArmLower;
    ModelRenderer RightArmUpper;
    ModelRenderer LeftClaw;
    ModelRenderer LeftHand;
    ModelRenderer LeftArmLower;
    ModelRenderer LeftArmUpper;
    ModelRenderer Neck2;
    ModelRenderer Neck1;
    ModelRenderer Body;
    ModelRenderer HeadPiece;
    ModelRenderer LeftLegPiece;
    ModelRenderer RightLegPiece;
    ModelRenderer TailPiece1;
  ModelRenderer TailPiece2;
 ModelRenderer Tail2;
 ModelRenderer TailPiece3;
 ModelRenderer Tail3;
 ModelRenderer TailPiece4;
 ModelRenderer Tail4;
ModelRenderer TailPiece5;
ModelRenderer Tail5;
 ModelRenderer TailFan5;
 ModelRenderer TailPiece6;
 ModelRenderer Tail6;
 ModelRenderer TailFan6;
 ModelRenderer Tail1;
ModelRenderer Head;
 ModelRenderer Bump;
ModelRenderer Crest;
ModelRenderer Nose;
ModelRenderer Snout;
ModelRenderer LeftLeg;
ModelRenderer LeftThigh;
ModelRenderer LeftFoot;
ModelRenderer RightThigh;
ModelRenderer RightLeg;
ModelRenderer RightFoot;
//ModelRenderer Tail1;
public ModelBaryonyx()
  {
    textureWidth = 100;
    textureHeight = 100;
    
      Spines = new ModelRenderer(this, 24, 41);
      Spines.addBox(0F, 0F, 0F, 0, 7, 28);
      Spines.setRotationPoint(0F, -5F, -8F);
      Spines.setTextureSize(100, 100);
      Spines.mirror = true;
      setRotation(Spines, 0F, 0F, 0F);
      Mane = new ModelRenderer(this, 56, 71);
      Mane.addBox(0F, -7F, -7F, 0, 5, 8);
      Mane.setRotationPoint(0F, 5F, -10F);
      Mane.setTextureSize(100, 100);
      Mane.mirror = true;
      setRotation(Mane, -0.4537856F, 0F, 0F);
      RightClaw = new ModelRenderer(this, 16, 9);
      RightClaw.addBox(-2F, 6F, -6F, 2, 1, 4);
      RightClaw.setRotationPoint(-4F, 9F, -6F);
      RightClaw.setTextureSize(100, 100);
      RightClaw.mirror = true;
      setRotation(RightClaw, 0F, -0.1570796F, 0F);
   //   RightHand.mirror = true;
      RightHand = new ModelRenderer(this, 54, 88);
      RightHand.addBox(-1F, 5F, -7F, 1, 2, 3);
      RightHand.setRotationPoint(-4F, 9F, -6F);
      RightHand.setTextureSize(100, 100);
      RightHand.mirror = true;
      setRotation(RightHand, 0.3141593F, -0.1570796F, 0F);
      RightHand.mirror = false;
      RightArmLower = new ModelRenderer(this, 1, 47);
      RightArmLower.addBox(-1F, 5F, -4F, 2, 2, 5);
      RightArmLower.setRotationPoint(-4F, 9F, -6F);
      RightArmLower.setTextureSize(100, 100);
      RightArmLower.mirror = true;
      setRotation(RightArmLower, 0.3141593F, 0F, 0F);
      RightArmUpper = new ModelRenderer(this, 1, 48);
      RightArmUpper.addBox(-1F, 0F, -1F, 2, 5, 3);
      RightArmUpper.setRotationPoint(-4F, 9F, -6F);
      RightArmUpper.setTextureSize(100, 100);
      RightArmUpper.mirror = true;
      setRotation(RightArmUpper, 0.3141593F, 0F, 0F);
      LeftClaw = new ModelRenderer(this, 11, 9);
      LeftClaw.addBox(0F, 6F, -6F, 2, 1, 4);
      LeftClaw.setRotationPoint(4F, 9F, -6F);
      LeftClaw.setTextureSize(100, 100);
      LeftClaw.mirror = true;
      setRotation(LeftClaw, 0F, 0.1570796F, 0F);
      LeftHand = new ModelRenderer(this, 54, 88);
      LeftHand.addBox(0F, 5F, -7F, 1, 2, 3);
      LeftHand.setRotationPoint(4F, 9F, -6F);
      LeftHand.setTextureSize(100, 100);
      LeftHand.mirror = true;
      setRotation(LeftHand, 0.3141593F, 0.1570796F, 0F);
      LeftArmLower = new ModelRenderer(this, 1, 47);
      LeftArmLower.addBox(-1F, 5F, -4F, 2, 2, 5);
      LeftArmLower.setRotationPoint(4F, 9F, -6F);
      LeftArmLower.setTextureSize(100, 100);
      LeftArmLower.mirror = true;
      setRotation(LeftArmLower, 0.3141593F, 0F, 0F);
      LeftArmUpper = new ModelRenderer(this, 1, 48);
      LeftArmUpper.addBox(-1F, 0F, -1F, 2, 5, 3);
      LeftArmUpper.setRotationPoint(4F, 9F, -6F);
      LeftArmUpper.setTextureSize(100, 100);
      LeftArmUpper.mirror = true;
      setRotation(LeftArmUpper, 0.3141593F, 0F, 0F);
      Neck2 = new ModelRenderer(this, 65, 87);
      Neck2.addBox(-1F, -2F, -7F, 4, 5, 8);
      Neck2.setRotationPoint(-1F, 5F, -10F);
      Neck2.setTextureSize(100, 100);
      Neck2.mirror = true;
      setRotation(Neck2, -0.4537856F, 0F, 0F);
      Neck1 = new ModelRenderer(this, 84, 74);
      Neck1.addBox(-2F, -4F, -4F, 6, 7, 4);
      Neck1.setRotationPoint(-1F, 7F, -7F);
      Neck1.setTextureSize(100, 100);
      Neck1.mirror = true;
      setRotation(Neck1, -0.3141593F, 0F, 0F);
      Body = new ModelRenderer(this, 30, 36);
      Body.addBox(7F, -3F, 0F, 8, 10, 20);
      Body.setRotationPoint(-11F, 5F, -8F);
      Body.setTextureSize(100, 100);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
   
      
      HeadPiece = new ModelRenderer(this, "HeadPiece");
    HeadPiece.setRotationPoint(1F, 2F, -18F);
    setRotation(HeadPiece, 0F, 0F, 0F);
    HeadPiece.mirror = true;
  //    HeadPiece.addBox("Head", -3F, -2F, -6F, 4, 5, 9);
   //   HeadPiece.addBox("Bump", -1F, -3F, -9F, 0, 2, 4);
   //   HeadPiece.addBox("Crest", -1F, -6F, -4F, 0, 4, 8);
    //  HeadPiece.addBox("Nose", -2.5F, -0.5F, -17F, 3, 3, 2);
   //   HeadPiece.addBox("Snout", -2.5F, -1F, -15F, 3, 4, 9);
   //   modelBary.addChildModelRenderer(HeadPiece);
    ModelRenderer Head = new ModelRenderer(this, 0, 86);
    Head.addBox(-3F, -2F, -6F, 4, 5, 9);
    ModelRenderer Bump = new ModelRenderer(this, 7, 72);
    Bump.addBox(-1F, -3F, -9F, 0, 2, 4);
    ModelRenderer Crest = new ModelRenderer(this, 36, 71);
    Crest.addBox(-1F, -6F, -4F, 0, 4, 8);
    ModelRenderer Nose = new ModelRenderer(this, 30, 85);
    Nose.addBox(-2.5F, -0.5F, -17F, 3, 3, 2);
    ModelRenderer Snout = new ModelRenderer(this, 35, 87);
    Snout.addBox(-2.5F, -1F, -15F, 3, 4, 9);
   
    
    LeftLegPiece = new ModelRenderer(this, "LeftLegPiece");
    LeftLegPiece.setRotationPoint(2F, 5F, 6F);
    setRotation(LeftLegPiece, 0F, 0F, 0F);
    LeftLegPiece.mirror = true;
    //  LeftLegPiece.addBox("LeftLeg", 1F, 8F, 3F, 2, 9, 3);
    //  LeftLegPiece.addBox("LeftThigh", 0F, -2F, -2F, 3, 11, 7);
     // LeftLegPiece.addBox("LeftFoot", 0.5F, 17F, 0F, 3, 2, 6);
   //   modelBary.addChildModelRenderer(LeftLegPiece);
    ModelRenderer LeftLeg = new ModelRenderer(this, 82, 8);
    LeftLeg.addBox(1F, 8F, 3F, 2, 9, 3);
    ModelRenderer LeftThigh = new ModelRenderer(this, 63, 17);
    LeftThigh.addBox(0F, -2F, -2F, 3, 11, 7);
    ModelRenderer LeftFoot = new ModelRenderer(this, 4, 66);
    LeftFoot.addBox(0.5F, 17F, 0F, 3, 2, 6);
     
    
    RightLegPiece = new ModelRenderer(this, "RightLegPiece");
    RightLegPiece.setRotationPoint(-2F, 5F, 6F);
    setRotation(RightLegPiece, 0F, 0F, 0F);
    RightLegPiece.mirror = true;
     // RightLegPiece.addBox("RightThigh", -3F, -2F, -2F, 3, 11, 7);
     // RightLegPiece.addBox("RightLeg", -3F, 8F, 3F, 2, 9, 3);
     // RightLegPiece.addBox("RightFoot", -3.5F, 17F, 0F, 3, 2, 6);
    //  modelBary.addChildModelRenderer(RightLegPiece);
    ModelRenderer RightThigh = new ModelRenderer(this, 50, 2);
    RightThigh.addBox(-3F, -2F, -2F, 3, 11, 7);
    ModelRenderer RightLeg = new ModelRenderer(this, 82, 8);
    RightLeg.addBox(-3F, 8F, 3F, 2, 9, 3);
    ModelRenderer RightFoot = new ModelRenderer(this, 4, 66);
    RightFoot.addBox(-3.5F, 17F, 0F, 3, 2, 6);
      
      
      TailPiece1 = new ModelRenderer(this, "TailPiece1");
    TailPiece1.setRotationPoint(0F, 6F, 12F);
    setRotation(TailPiece1, 0F, 0F, 0F);
    TailPiece1.mirror = true;
      //TailPiece1.addBox("Tail1", -3F, -4F, 0F, 6, 8, 4);
    ModelRenderer Tail1 = new ModelRenderer(this, 29, 43);
    Tail1.addBox(-3F, -4F, 0F, 6, 8, 4);
      
      TailPiece2 = new ModelRenderer(this, "TailPiece2");
    TailPiece2.setRotationPoint(0F, -1F, 4F);
    setRotation(TailPiece2, 0F, 0F, 0F);
    TailPiece2.mirror = true;
    //  TailPiece2.addBox("Tail2", -3F, -3F, 0F, 6, 6, 4);
    ModelRenderer Tail2 = new ModelRenderer(this, 9, 55);
    Tail2.addBox(-3F, -3F, 0F, 6, 6, 4);
      
      
      TailPiece3 = new ModelRenderer(this, "TailPiece3");
    TailPiece3.setRotationPoint(0F, -1F, 4F);
    setRotation(TailPiece3, 0F, 0F, 0F);
    TailPiece3.mirror = true;
     // TailPiece3.addBox("Tail3", -2.5F, -2F, 0F, 5, 5, 11);
    ModelRenderer Tail3 = new ModelRenderer(this, 0, 26);
    Tail3.addBox(-2.5F, -2F, 0F, 5, 5, 11);
      
      
      
      TailPiece4 = new ModelRenderer(this, "TailPiece4");
    TailPiece4.setRotationPoint(0F, 0.5F, 11F);
    setRotation(TailPiece4, 0F, 0F, 0F);
    TailPiece4.mirror = true;
      //TailPiece4.addBox("Tail4", -2F, -2F, 0F, 4, 4, 11);
    ModelRenderer Tail4 = new ModelRenderer(this, 70, 39);
    Tail4.addBox(-2F, -2F, 0F, 4, 4, 11);
      
      
      
      TailPiece5 = new ModelRenderer(this, "TailPiece5");
    TailPiece5.setRotationPoint(0F, -0.5F, 11F);
    setRotation(TailPiece5, 0F, 0F, 0F);
    TailPiece5.mirror = true;
      //TailPiece5.addBox("Tail5", -1.5F, -1F, 0F, 3, 3, 11);
     // TailPiece5.addBox("TailFan5", 0F, -5F, 4F, 0, 4, 7);
    ModelRenderer Tail5 = new ModelRenderer(this, 33, 21);
    Tail5.addBox(-1.5F, -1F, 0F, 3, 3, 11);
    ModelRenderer TailFan5 = new ModelRenderer(this, 7, -4);
   TailFan5.addBox(0F, -5F, 4F, 0, 4, 7);
      
      
      TailPiece6 = new ModelRenderer(this, "TailPiece6");
    TailPiece6.setRotationPoint(0F, 0.5F, 11F);
    setRotation(TailPiece6, 0F, 0F, 0F);
    TailPiece6.mirror = true;
    ModelRenderer Tail6 = new ModelRenderer(this, 74, 25);
    Tail6.addBox(-1F, -1F, 0F, 2, 2, 11);
    ModelRenderer TailFan6 = new ModelRenderer(this, 6, 6);
    TailFan6.addBox(0F, -6F, 0F, 0, 5, 13);
   
    
    //TailPiece6.addBox("Tail6", -1F, -1F, 0F, 2, 2, 11);
     // TailPiece6.addBox("TailFan6", 0F, -6F, 0F, 0, 5, 13);
    //  TailPiece5.addChildModelRenderer(TailPiece6);
    //  TailPiece4.addChildModelRenderer(TailPiece5);
  //    TailPiece3.addChildModelRenderer(TailPiece4);
  //    TailPiece2.addChildModelRenderer(TailPiece3);
 //     TailPiece1.addChildModelRenderer(TailPiece2);
    //  modelBary.addChildModelRenderer(TailPiece1);
   TailPiece5.addChild(TailPiece6);
   TailPiece4.addChild(TailPiece5);
   TailPiece3.addChild(TailPiece4);
   TailPiece2.addChild(TailPiece3);
   TailPiece1.addChild(TailPiece2);
  
  
   TailPiece1.addChild(Tail1);
   TailPiece2.addChild(Tail2);
   TailPiece3.addChild(Tail3);
   TailPiece4.addChild(Tail4);
   TailPiece5.addChild(Tail5);
   TailPiece5.addChild(TailFan5);
   TailPiece6.addChild(Tail6);
   TailPiece6.addChild(TailFan6);
  HeadPiece.addChild(Head);
  HeadPiece.addChild(Bump);
  HeadPiece.addChild(Crest);
  HeadPiece.addChild(Nose);
  HeadPiece.addChild(Snout);
  LeftLegPiece.addChild(LeftLeg);
  LeftLegPiece.addChild(LeftThigh);
  LeftLegPiece.addChild(LeftFoot);
  RightLegPiece.addChild(RightThigh);
  RightLegPiece.addChild(RightLeg);
  RightLegPiece.addChild(RightFoot);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Spines.render(f5);
    Mane.render(f5);
    RightClaw.render(f5);
    RightHand.render(f5);
    RightArmLower.render(f5);
    RightArmUpper.render(f5);
    LeftClaw.render(f5);
    LeftHand.render(f5);
    LeftArmLower.render(f5);
    LeftArmUpper.render(f5);
    Neck2.render(f5);
    Neck1.render(f5);
    Body.render(f5);
    HeadPiece.render(f5);
    LeftLegPiece.render(f5);
    RightLegPiece.render(f5);
    TailPiece1.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity parEntity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    HeadPiece.rotateAngleY = f3 / 57.29578F;
	  HeadPiece.rotateAngleX = f4 / 57.29578F;
	  this.LeftLegPiece.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
	   this.RightLegPiece.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
	   updateDistanceMovedTotal(parEntity);
	   cycleIndex = (int) ((getDistanceMovedTotal(parEntity)*CYCLES_PER_BLOCK)
	         %undulationCycle.length);
	   // DEBUG THIS WILL SPAM THE CONSOLE. STOP THIS CODE ON MOD RELEASE.
	   /*System.out.println("ModelSpino setRotationAngles(), distanceMoved ="
	         +getDistanceMovedTotal(parEntity)+", cycleIndex ="+cycleIndex);*/
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][0]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][1]) ;
	   TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][2]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][3]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][4]) ;
	   TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][5]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][0]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][1]) ;
	   TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][2]) ;
	   TailPiece4.rotateAngleY = degToRad(undulationCycle[cycleIndex][3]) ;
	   TailPiece5.rotateAngleY = degToRad(undulationCycle[cycleIndex][4]) ;
	   TailPiece6.rotateAngleY = degToRad(undulationCycle[cycleIndex][5]) ;
  
  
  }
  protected void updateDistanceMovedTotal(Entity parEntity) 
  {
      distanceMovedTotal += parEntity.getDistance(parEntity.prevPosX, parEntity.prevPosY, 
            parEntity.prevPosZ);
  }
  
  protected double getDistanceMovedTotal(Entity parEntity) 
  {
      return (distanceMovedTotal);
  }

  protected float degToRad(float degrees)
  {
      return degrees * (float)Math.PI / 180 ;
  }
}
